name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  ci:
    name: Run CI Checks
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.12.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: "pnpm"

      - name: Cache Cypress Binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install

      - name: Optimize pnpm store
        run: pnpm store prune

      - name: Install Cypress
        run: pnpm exec cypress install

      - name: Debug DATABASE_URL
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}"

      - name: Set up DATABASE_URL
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV
          export DATABASE_URL=${{ secrets.DATABASE_URL }}

      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Run Prisma Migrations (Development)
        run: pnpm prisma db push

      - name: Run ESLint (Linting)
        run: pnpm run lint

      - name: Run TypeScript Check
        run: pnpm run type-check

      - name: Run Unit Tests
        run: pnpm run test -- --ci --coverage

      - name: Start Next.js Server
        run: pnpm run dev &

      - name: Wait for Next.js to be Ready
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Run Cypress Tests
        run: pnpm run test:e2e

  deploy:
    name: Deploy to Vercel
    needs: ci
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.12.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.10.0
          cache: "pnpm"

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
